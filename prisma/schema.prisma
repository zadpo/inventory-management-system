generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  email              String   @unique
  password           String
  isAdmin            Boolean  @default(false)
  hasInventoryAccess Boolean  @default(false)
  role               String   @default("client")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  inventory Inventory[]
  orders    Order[]
}

model Inventory {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  itemName        String
  quantity        String
  costPerUnit     Float
  supplierBrand   String
  reorderLevel    String
  expirationDate  DateTime?
  userId          String?   @db.ObjectId
  user            User?     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderItems OrderItem[]
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  status    String   @default("pending") // e.g., "pending", "processing", "completed", "cancelled"
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderItems OrderItem[]
}

model OrderItem {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  orderId     String    @db.ObjectId
  order       Order     @relation(fields: [orderId], references: [id])
  inventoryId String    @db.ObjectId
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  quantity    Int
  price       Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}